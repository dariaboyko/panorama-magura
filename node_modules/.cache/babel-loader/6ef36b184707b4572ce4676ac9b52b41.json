{"ast":null,"code":"var _jsxFileName = \"/Users/karen3/react/mama/magura/src/components/TransitionAnimation.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useTransition, animated, useSpringRef } from '@react-spring/web';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pages = [currentPage => /*#__PURE__*/_jsxDEV(animated.div, {\n  children: currentPage\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 20\n}, this), nextPage => /*#__PURE__*/_jsxDEV(animated.div, {\n  children: nextPage\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 17\n}, this)];\nexport default function TransitionAnimation(props) {\n  _s();\n\n  let currentPage = props.children.currentPage;\n  let nextPage = props.children.nextPage;\n  const [index, set] = useState(0);\n  const onClick = useCallback(() => set(state => (state + 1) % 3), []);\n  const transRef = useSpringRef();\n  const transitions = useTransition(index, {\n    ref: transRef,\n    keys: null,\n    from: {\n      opacity: 0,\n      transform: \"translate3d(0,100%,0)\"\n    },\n    enter: {\n      opacity: 1,\n      transform: \"translate3d(0,0,0)\"\n    },\n    leave: {\n      opacity: 0,\n      transform: \"translate3d(0,-50%,0)\"\n    }\n  });\n  useEffect(() => {\n    transRef.start();\n  }, [index]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    children: [transitions((style, i) => {\n      const Page = pages[i];\n      return /*#__PURE__*/_jsxDEV(Page, {\n        style: style\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }, this);\n    }), props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransitionAnimation, \"esrlEO3ksMReFzM/W1MPJ1qDtn0=\", false, function () {\n  return [useSpringRef, useTransition];\n});\n\n_c = TransitionAnimation;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransitionAnimation\");","map":{"version":3,"sources":["/Users/karen3/react/mama/magura/src/components/TransitionAnimation.tsx"],"names":["React","useState","useCallback","useEffect","useTransition","animated","useSpringRef","pages","currentPage","nextPage","TransitionAnimation","props","children","index","set","onClick","state","transRef","transitions","ref","keys","from","opacity","transform","enter","leave","start","style","i","Page"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAsDC,SAAtD,QAAuE,OAAvE;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAiDC,YAAjD,QAAqE,mBAArE;;AAEA,MAAMC,KAAwD,GAAG,CAC9DC,WAAD,iBAAiB,QAAC,QAAD,CAAU,GAAV;AAAA,YAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,QAD8C,EAE9DC,QAAD,iBAAc,QAAC,QAAD,CAAU,GAAV;AAAA,YAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,QAFiD,CAAjE;AAKA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AACjD,MAAIH,WAAW,GAAGG,KAAK,CAACC,QAAN,CAAeJ,WAAjC;AACA,MAAIC,QAAQ,GAAGE,KAAK,CAACC,QAAN,CAAeH,QAA9B;AACA,QAAM,CAACI,KAAD,EAAQC,GAAR,IAAeb,QAAQ,CAAC,CAAD,CAA7B;AACA,QAAMc,OAAO,GAAGb,WAAW,CAAC,MAAMY,GAAG,CAAEE,KAAD,IAAW,CAACA,KAAK,GAAG,CAAT,IAAc,CAA1B,CAAV,EAAwC,EAAxC,CAA3B;AACA,QAAMC,QAAQ,GAAGX,YAAY,EAA7B;AACA,QAAMY,WAAW,GAAGd,aAAa,CAACS,KAAD,EAAQ;AACvCM,IAAAA,GAAG,EAAEF,QADkC;AAEvCG,IAAAA,IAAI,EAAE,IAFiC;AAGvCC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,SAAS,EAAE;AAAzB,KAHiC;AAIvCC,IAAAA,KAAK,EAAE;AAAEF,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,SAAS,EAAE;AAAzB,KAJgC;AAKvCE,IAAAA,KAAK,EAAE;AAAEH,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,SAAS,EAAE;AAAzB;AALgC,GAAR,CAAjC;AAOApB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACS,KAAT;AACD,GAFQ,EAEN,CAACb,KAAD,CAFM,CAAT;AAGA,sBACE;AAAK,IAAA,OAAO,EAAEE,OAAd;AAAA,eACGG,WAAW,CAAC,CAACS,KAAD,EAAQC,CAAR,KAAc;AACzB,YAAMC,IAAI,GAAGtB,KAAK,CAACqB,CAAD,CAAlB;AACA,0BAAO,QAAC,IAAD;AAAM,QAAA,KAAK,EAAED;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAHW,CADd,EAKGhB,KAAK,CAACC,QALT;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAzBuBF,mB;UAKLJ,Y,EACGF,a;;;KANEM,mB","sourcesContent":["import React, { useState, useCallback, CSSProperties, useEffect } from 'react'\nimport { useTransition, animated, AnimatedProps, useSpringRef } from '@react-spring/web'\n\nconst pages: ((currentPage, nextPage) => React.ReactElement)[] = [\n  (currentPage) => <animated.div>{currentPage}</animated.div>,\n  (nextPage) => <animated.div>{nextPage}</animated.div>\n];\n\nexport default function TransitionAnimation(props) {\n  let currentPage = props.children.currentPage;\n  let nextPage = props.children.nextPage;\n  const [index, set] = useState(0);\n  const onClick = useCallback(() => set((state) => (state + 1) % 3), []);\n  const transRef = useSpringRef();\n  const transitions = useTransition(index, {\n    ref: transRef,\n    keys: null,\n    from: { opacity: 0, transform: \"translate3d(0,100%,0)\" },\n    enter: { opacity: 1, transform: \"translate3d(0,0,0)\" },\n    leave: { opacity: 0, transform: \"translate3d(0,-50%,0)\" },\n  });\n  useEffect(() => {\n    transRef.start();\n  }, [index]);\n  return (\n    <div onClick={onClick}>\n      {transitions((style, i) => {\n        const Page = pages[i];\n        return <Page style={style} />;\n      })}\n      {props.children}\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}